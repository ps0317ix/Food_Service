<div class="main user-show">

    <div id="ranking">
        <div class="rankings tabelog_rankings">
          <div class="ranking_results" style="padding-top:50px;">
            <h3 style="padding:10px 0px;"><%= params[:area] %>の食べログランキング</h3>

            <!-- 食べログランキングコンテンツ -->
            <div class="row">
              <div class="col-md-6">
                <div class="map_container">
                  <div id="tabelog_map_canvas"></div>
                </div>
                <div class="sort_btns">
                  <button class="btn" @click="reverseSortShop()">元に戻す</button>
                  <button class="btn" @click="sortShop()">開店中のみ表示</button>
                  <button class="btn" @click="readcookie()">cookie読み込み</button>
                </div>
              </div>
              <div class="col-md-6">
                <ul>
                  <template v-for="item in getTabelogItems">
                    <a class="item_link" @click="windowOpen(item.no)">
                      <li class="ranking_result row" v-bind:style="{opacity:item.opacity}">
                          <div class="ranking_result_img col-md-4" style="padding:0px;">
                            <v-lazy-image :src="item.img" :src-placeholder="item.img" ></v-lazy-image>
                          </div>
                          <div class="ranking_result_content col-md-8">
                            <h2>{{ item.no }}位 {{ item.name }}</h2>
                            <p class="address">{{ item.address }}</p>
                            <p style="font-size:11px;">{{ item.jenre }}<br>
                            定休日：{{ item.week }}<br>営業時間：{{ item.time }}</p>
                          </div>
                      </li>
                    </a>
                  </template>
                </ul>
                <paginate
                  :page-count="gettabelogPageCount"
                  :page-range="3"
                  :margin-pages="5"
                  :click-handler="clickCallback"
                  :prev-text="'＜'"
                  :next-text="'＞'"
                  :container-class="'pagination'"
                  :page-class="'page-item'">
                </paginate>
              </div>
            </div>

          </div>
        </div>

        <div class="rankings tabelog_rankings">
          <div class="ranking_results" id="ranking" style="padding-top:50px;">
            <h3 style="padding:10px 0px;"><%= params[:area] %>の一休ランキング</h3>
            <ul>
              <template v-for="item in getIkkyuItems">
                <a :href="item.href">
                  <li class="ranking_result row">
                      <div class="ranking_result_img col-md-4">
                        <v-lazy-image :src="item.img" :src-placeholder="item.img" ></v-lazy-image>
                      </div>
                      <div class="ranking_result_content col-md-8">
                        <h2>{{ item.no }}位　{{ item.name }}</h2>
                        <p>{{ item.jenre }}</p>
                        <p>{{ item.address }}</p>
                      </div>
                  </li>
                </a>
              </template>
            </ul>
            <paginate
              :page-count="getIkkyuPageCount"
              :page-range="3"
              :margin-pages="2"
              :click-handler="clickCallback"
              :prev-text="'＜'"
              :next-text="'＞'"
              :container-class="'pagination'"
              :page-class="'page-item'">
            </paginate>
          </div>
        </div>

        <div class="rankings tabelog_rankings">
          <div class="ranking_results" id="ranking" style="padding-top:50px;">
            <h3 style="padding:10px 0px;"><%= params[:area] %>のRettyランキング</h3>
            <ul>
              <template v-for="item in getRettyItems">
                <a :href="item.href">
                  <li class="ranking_result row">
                      <div class="ranking_result_img col-md-4">
                        <v-lazy-image :src="item.img" :src-placeholder="item.img" ></v-lazy-image>
                      </div>
                      <div class="ranking_result_content col-md-8">
                        <h2>{{ item.no }}位　{{ item.name }}</h2>
                        <p>{{ item.jenre }}</p>
                      </div>

                  </li>
                </a>
              </template>
            </ul>
            <paginate
              :page-count="getRettyPageCount"
              :page-range="3"
              :margin-pages="2"
              :click-handler="clickCallback"
              :prev-text="'＜'"
              :next-text="'＞'"
              :container-class="'pagination'"
              :page-class="'page-item'">
            </paginate>
          </div>
        </div>
    </div>


</div>

</script>
<%= javascript_include_tag "map.js" %>

<script type="text/javascript">

    var date = new Date();          // Dateオブジェクトを作成
    var dayOfWeek = date.getDay();  // 曜日を格納
    var dayOfWeekStr = [ "日", "月", "火", "水", "木", "金", "土" ][dayOfWeek]; // 曜日を日本語置換

    var arealat = <%= @placeinfo.latitude %>  //map用の緯度
    var arealng = <%= @placeinfo.longitude %>  //map用の経度
    var a = 0;

    // 食べログの店舗情報
    var tabelogshopdata = [
      <% @cnt = 1
      @tabelogshops.each do |shop| %>
          {no: <%= @cnt %>, id: "<%= shop.id %>", area: "<%= params[:area] %>", name: "<%= shop.name %>", href: "<%= shop.url %>", img: "<%= shop.img %>", address:"<%= shop.address %>", lat:<%= shop.latitude %>, lng:<%= shop.longitude %>, jenre: "<%= shop.jenre %>", week: "<%= shop.week %>", time: "<%= shop.time %>", opacity: 1},
      <% @cnt += 1
      end %>
    ];
    // 一休の店舗情報
    var ikkyushopdata = [
      <% @cnt = 1
      @ikkyushops.each do |shop| %>
          {no: <%= @cnt %>, id: "<%= shop.id %>", name: "<%= shop.name %>", href: "<%= shop.url %>", img: "<%= shop.img %>", address:"<%= shop.address %>", lat:"<%= shop.latitude %>", lng:"<%= shop.longitude %>", jenre: "<%= shop.jenre %>"},
      <% @cnt += 1
      end %>
    ];
    // Rettyの店舗情報
    var rettyshopdata = [
      <% @cnt = 1
      @rettyshops.each do |shop| %>
          {no: <%= @cnt %>, id: "<%= shop.id %>", name: "<%= shop.name %>", href: "<%= shop.url %>", img: "<%= shop.img %>", jenre: "<%= shop.jenre %>"},
      <% @cnt += 1
      end %>
    ];

    var cookieShopNames = [];  // cookieからクリックした店舗の配列を取得
    var cookieShopName;

    // var cookies = document.cookie; // 全てのcookieを取り出して
    // var cookiesArray = cookies.split(';'); // ;で分割し配列に

    // shopnamesを無害化
    // for(var c of cookiesArray){ //一つ一つ取り出して
    //     var cArray = c.split('='); //さらに=で分割して配列に
    //     if( cArray[0] == ' shopnames'){ // 取り出したいkeyと合致したら
    //         cookieShopNames = cArray[1].replace("[", "").replace("]", "").split('","')
    //     }
    // }

    cookieShopNames = Cookies.get('shopnames').replace("[", "").replace("]", "").split('","')

    // 無害化した店舗名を配列に格納し直す
    if(cookieShopNames!=""){
      var a = 0;
      var replaceShopNames = cookieShopNames
      cookieShopNames = [];
      for(var cookieShop of replaceShopNames){
        cookieShop = cookieShop.replace(/\"/g, "").replace(/\\/g, "") // サニタイジング
        cookieShopNames.push(cookieShop);
      }
    }

    console.log(cookieShopNames);


     var marker = [];      // マーカーの配列
     var infoWindow = [];  // ウインドウの設定
     var z = 0;

     function initMap() {
        // 地図の作成
        var mapLatLng = new google.maps.LatLng({lat: arealat, lng: arealng});
        tabelogmap = new google.maps.Map(document.getElementById('tabelog_map_canvas'), { // #sampleに地図を埋め込む
          center: mapLatLng, // 地図の中心を指定
           zoom: 15 // 地図のズームを指定
        });
        // マーカー毎の処理
        for (var i = 0; i < tabelogshopdata.length; i++) {
          addMarker(i);
        }
        marker[0].setOptions({
        });
     }

    // マップにマーカーを追加
     function addMarker(i){
         markerLatLng = new google.maps.LatLng({lat: tabelogshopdata[i]['lat'], lng: tabelogshopdata[i]['lng']}); // 緯度経度のデータ作成
         marker[i] = new google.maps.Marker({ // マーカーの追加
           position: markerLatLng, // マーカーを立てる位置を指定
           map: tabelogmap,     // マーカーを立てる地図を指定
           animation: google.maps.Animation.DROP,  //マーカーを立てるアニメーションを設定
           label:{
             text: (i+1).toString(),
             color: '#FFFFFF',
		         fontSize: '18px'
           },
           icon: {
            fillOpacity: 0.8,
           }
        });
        infoWindow[i] = new google.maps.InfoWindow({ // 吹き出しの追加
            content: '<div class="map_window" style="z-index:"' + i + '";"><a href="' + tabelogshopdata[i]['href'] + '" style="text-decoration: none;"><h5>' + (i+1) + '位 ' + tabelogshopdata[i]['name'] + '</h5><p>' + tabelogshopdata[i]['address'] + '<br>' + tabelogshopdata[i]['jenre'] + '<br>定休日：' + tabelogshopdata[i]['week'] + '<br>営業時間：' + tabelogshopdata[i]['time'] + '</p><img src="' + tabelogshopdata[i]['img'] + '"></a></div>' // 吹き出しに表示する内容
          });
        markerEvent(i); // マーカーにクリックイベントを追加
     }

     // マーカーにクリックイベントを追加
     function markerEvent(i) {
         marker[i].addListener('click', function() { // マーカーをクリックしたとき
           closewindow();
           infoWindow[i].open(tabelogmap, marker[i]); // 吹き出しの表示
       });
     }

    // クリックするとウインドウを閉じる
     function closewindow(){
       for(var j=0; j<infoWindow.length; j++){
         infoWindow[j].close(tabelogmap, marker[j]);
       }
     }

     // Cookie書き込み
     function writeCookie(i){
       cookieShopName = tabelogshopdata[i]['name']
       console.log(cookieShopName);
       cookieShopNames.push(cookieShopName)
       console.log(cookieShopNames);
       var json_str = JSON.stringify(cookieShopNames);
       console.log(json_str);
       // document.cookie = "shopnames=" + encodeURIComponent(json_str) + " expires=" + date.toUTCString() + "; path=/;"
       Cookies.set('shopnames', json_str, { expires: 7, path: "/"});
     }


     // 画像の遅延読み込み
     const VLazyImagePlugin = window['VLazyImage'].VLazyImagePlugin;
     Vue.use(VLazyImagePlugin);

     //ページネーションを定義
     Vue.component('paginate', VuejsPaginate)

     var vm = new Vue({
        el: '#ranking',
        data: {
          parPage: 4,
          currentPage: 1,
          tabelogitems: tabelogshopdata,
          ikkyuitems: ikkyushopdata,
          rettyitems: rettyshopdata,
        },
        methods: {
         clickCallback: function (pageNum) {
            this.currentPage = Number(pageNum);
         },
         // クリックした時吹き出しを追加
         windowOpen: function(i){
           closewindow();  //他の吹き出しを消す
           i = i - 1
           infoWindow[i].open(tabelogmap, marker[i]);
           writeCookie(i);  // Cookieに書き込む
         },
         // 定休日をグレーアウト
         sortShop: function(){
           for(var x=0; x<this.tabelogitems.length; x++){
             if(~this.tabelogitems[x]['week'].indexOf(dayOfWeekStr+'曜')){
               this.tabelogitems[x]['opacity'] = 0.2
               marker[x].setMap(null);
             }
           }
         },
         // グレーアウトを元に戻す
         reverseSortShop: function(){
           for(var y=0; y<this.tabelogitems.length; y++){
             if(~this.tabelogitems[y]['week'].indexOf(dayOfWeekStr+'曜')){
               this.tabelogitems[y]['opacity'] = 1
               addMarker(y);
             }
           }
         },
         readcookie: function() {
            var cookieValue = document.cookie;
            console.log(cookieValue);
          }
        },
        computed: {
          // ページネーション関連
          getTabelogItems: function() {
           let tabelogCurrent = this.currentPage * this.parPage;
           let tabelogStart = tabelogCurrent - this.parPage;
           return this.tabelogitems.slice(tabelogStart, tabelogCurrent);
          },
          getIkkyuItems: function() {
           let current = this.currentPage * this.parPage;
           let start = current - this.parPage;
           return this.ikkyuitems.slice(start, current);
         },
           getRettyItems: function() {
            let current = this.currentPage * this.parPage;
            let start = current - this.parPage;
            return this.rettyitems.slice(start, current);
          },
          getTabelogPageCount: function() {
           return Math.ceil(this.tabelogitems.length / this.parPage);
         },
          getIkkyuPageCount: function() {
           return Math.ceil(this.ikkyuitems.length / this.parPage);
          },
          getRettyPageCount: function() {
           return Math.ceil(this.rettyitems.length / this.parPage);
         },
        }
      })
</script>
